// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

public class ExampleVisionSubsystem extends SubsystemBase {
  /** Creates a new ExampleSubsystem. */
  
  // Change this to match the name of your camera (please do this)
  private PhotonCamera camera = new PhotonCamera("photonvision");

  // Determines if there are any targets in view
  private boolean hasTargets;

  public ExampleVisionSubsystem() {}

  /**
   * Example command factory method.
   *
   * @return a command
   */
  public Command checkTargets() {
    // Inline construction of command goes here.
    hasTargets = result.hasTargets();
  }

  public Command estimatePos(){
    // Correct pose estimate with vision measurements
    var visionEst = vision.getEstimatedGlobalPose();
    visionEst.ifPresent(
            est -> {
                // Change our trust in the measurement based on the tags we can see
                var estStdDevs = vision.getEstimationStdDevs();

                drivetrain.addVisionMeasurement(
                        est.estimatedPose.toPose2d(), est.timestampSeconds, estStdDevs);
            });
  }
  /**
   * An example method querying a boolean state of the subsystem (for example, a digital sensor).
   *
   * @return value of some boolean subsystem state, such as a digital sensor.
   */
  public boolean exampleCondition() {
    // Query some boolean state, such as a digital sensor.
    return false;
  }

  @Override
  public void periodic() {
    // This method will be called once per scheduler run
  }

  @Override
  public void simulationPeriodic() {
    // This method will be called once per scheduler run during simulation
  }
}
